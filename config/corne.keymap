/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <600>;
            global-quick-tap;
            quick-tap-ms = <400>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };
    };

    macros {
        screenshoot: screenshoot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_GUI) &kp S>;
            label = "SCREENSHOOT";
        };

        BRACES: BRACES {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "BRACES";
        };

        parenteses: parenteses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS>;
            label = "PARENTESES";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp Q           &kp W           &kp E        &kp R         &kp T               &kp Y           &kp U         &kp I          &kp O            &kp P               &kp BACKSLASH
&kp GLOBE  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D  &kp F         &kp G               &kp H           &hm RSHIFT J  &hm RCTRL K    &hm RIGHT_ALT L  &hm RGUI SEMICOLON  &kp SQT
&none      &kp Z           &kp X           &kp C        &kp V         &kp B               &kp N           &kp M         &kp COMMA      &kp DOT          &kp FSLH            &kp C_AC_HOME
                                           &kp TAB      &ltq 1 SPACE  &hm ESC LEFT_SHIFT  &kp LEFT_SHIFT  &ltq 2 ENTER  &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&screenshoot       &trans           &kp PAGE_DOWN  &kp UP    &kp PAGE_UP  &trans       &kp SLASH     &kp N7  &kp N8  &kp N9  &trans   &kp BSPC
&kp LEFT_ALT       &rgb_ug RGB_TOG  &kp LEFT       &kp DOWN  &kp RIGHT    &kp EQUAL    &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp SQT  &trans
&ext_power EP_TOG  &trans           &trans         &trans    &BRACES      &kp KP_PLUS  &kp N0        &kp N1  &kp N2  &kp N3  &trans   &kp LC(P)
                                                   &trans    &trans       &trans       &trans        &mo 3   &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp ESC     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &parenteses  &trans    &kp UP    &trans     &trans  &trans
&trans  &kp CAPS    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp AT           &kp END      &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &kp DELETE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT          &trans       &trans    &trans    &trans     &trans  &trans
                                     &trans           &trans           &trans           &trans       &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans  &trans  &trans  &trans
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };
    };
};
